{"ast":null,"code":"var _jsxFileName = \"/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport Form from \"../classes/Form\";\nimport Person from \"../classes/Person\";\nimport history from '../classes/history'; // https://www.choosemyplate.gov/eathealthy/grains\n\nfunction countFoods(familyMembers) {\n  var i;\n  var count = 0;\n\n  for (i = 0; i < familyMembers.length; i++) {\n    console.log(\"fam at I: \" + familyMembers[i] + \"\\n\" + \"count is: \" + count);\n    count = +count + +familyMembers[i].grains;\n  }\n\n  return +count;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      familyMembers: []\n    };\n\n    this.onSubmit = familyMembers => {\n      var entry = new Person(familyMembers.firstName, familyMembers.category, familyMembers.age);\n      var newFields = this.state.familyMembers;\n      newFields.push(entry);\n      this.setState({\n        newFields\n      });\n    };\n\n    this.resetFam = e => {\n      this.setState({\n        familyMembers: []\n      });\n    };\n\n    this.continueToStep2 = e => {\n      let famData = [{\n        grains: countFoods(this.state.familyMembers, \"grains\"),\n        veg: countFoods(this.state.familyMembers, \"veg\"),\n        fruit: countFoods(this.state.familyMembers, \"fruit\"),\n        dairy: countFoods(this.state.familyMembers, \"dairy\"),\n        protein: countFoods(this.state.familyMembers, \"protein\")\n      }];\n      console.log(famData); // go to next page\n\n      history.push({\n        pathname: '/Step2',\n        famData: famData\n      });\n    };\n  }\n\n  /**\n   * Shows the table\n   */\n  renderTable() {\n    return this.state.familyMembers.map((member, index) => {\n      const {\n        firstName,\n        age,\n        category\n      } = member;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: firstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, firstName), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, age), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, category));\n    });\n  }\n  /**\n   * Shows the table header\n   */\n\n\n  renderTableHeader() {\n    if (this.state.familyMembers.length > 0) {\n      let header = Object.keys(this.state.familyMembers[0]);\n      var count = 0;\n      let newHeader = header.splice(0, 3);\n      return newHeader.map((key, index) => {\n        if (count < 3) {\n          return /*#__PURE__*/React.createElement(\"th\", {\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 18\n            }\n          }, key.toUpperCase());\n        }\n\n        count++;\n      });\n    }\n  }\n  /**\n   * Runs the main App\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: familyMembers => this.onSubmit(familyMembers),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.resetFam(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"reset\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 64\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Your Family Members\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"familyMembers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, this.renderTableHeader()), this.renderTable()))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.continueToStep2(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Continue to Step 2\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/App.js"],"names":["React","Component","Form","Person","history","countFoods","familyMembers","i","count","length","console","log","grains","App","state","onSubmit","entry","firstName","category","age","newFields","push","setState","resetFam","e","continueToStep2","famData","veg","fruit","dairy","protein","pathname","renderTable","map","member","index","renderTableHeader","header","Object","keys","newHeader","splice","key","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Form from \"../classes/Form\"; \nimport Person from \"../classes/Person\"; \nimport history from '../classes/history'; \n// https://www.choosemyplate.gov/eathealthy/grains\n\nfunction countFoods(familyMembers) {\n  var i;  \n  var count = 0; \n  for (i = 0; i < familyMembers.length; i++) {\n    console.log(\"fam at I: \" + familyMembers[i] + \"\\n\" + \"count is: \" + count); \n    count = (+count) + (+familyMembers[i].grains); \n  }\n  return +count; \n}\n\nclass App extends Component { \n  state = {\n    familyMembers: []\n  }\n\n  /**\n   * onSubmit adds a new Person entry to the family members list\n   */\n  onSubmit = (familyMembers) => {\n    var entry = new Person(familyMembers.firstName, familyMembers.category, familyMembers.age); \n    var newFields = this.state.familyMembers; \n    newFields.push(entry); \n    this.setState({ newFields })\n  }; \n\n  /**\n   * Resets list of Family members\n   */\n  resetFam = (e) => {\n    this.setState({\n      familyMembers: []\n    })\n  }; \n\n  /**\n   * Transitions to step 2\n   */\n  continueToStep2 = (e) => {\n    let famData = [{\n      grains: countFoods(this.state.familyMembers, \"grains\"), \n      veg: countFoods(this.state.familyMembers, \"veg\"), \n      fruit: countFoods(this.state.familyMembers, \"fruit\"), \n      dairy: countFoods(this.state.familyMembers, \"dairy\"), \n      protein: countFoods(this.state.familyMembers, \"protein\")\n    }]\n    console.log(famData); \n    // go to next page\n    history.push({\n      pathname: ('/Step2'), \n      famData: famData\n    });      \n  }; \n\n  /**\n   * Shows the table\n   */\n  renderTable() {\n    return this.state.familyMembers.map((member, index) => {\n      const { firstName, age, category} = member \n      return (\n        <tr key={firstName}>\n          <td>{firstName}</td>\n          <td>{age}</td>\n          <td>{category}</td>\n        </tr>\n      )\n    })\n  }\n\n  /**\n   * Shows the table header\n   */\n  renderTableHeader() {\n    if (this.state.familyMembers.length > 0) {\n      let header = Object.keys(this.state.familyMembers[0])\n      var count = 0; \n      let newHeader = header.splice(0, 3); \n      return newHeader.map((key, index) => {\n        if (count < 3) {\n          return <th key={index}>{key.toUpperCase()}</th>\n        }\n        count++; \n      })\n    }\n  }\n\n  /**\n   * Runs the main App\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <Form onSubmit={familyMembers => this.onSubmit(familyMembers)}/>\n        <button onClick={e => this.resetFam(e)}>reset</button> <br /> <br />\n        {/* <p>{JSON.stringify(this.state.familyMembers, null, 5)}</p> ---> table here */}\n        <div>\n            <h1 id='title'>Your Family Members</h1>\n            <table id='familyMembers'>\n               <tbody>\n                  <tr>{this.renderTableHeader()}</tr>\n                  {this.renderTable()}\n               </tbody>\n            </table>\n          </div>\n          <button onClick={e => this.continueToStep2(e)}>Continue to Step 2</button>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}