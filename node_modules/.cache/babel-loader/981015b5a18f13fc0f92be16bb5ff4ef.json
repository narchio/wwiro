{"ast":null,"code":"var _jsxFileName = \"/Users/nicolascarchio/Desktop/when_will_i_run_out/src/classes/FormStep2.js\";\nimport React from 'react';\nimport { grainLabels, vegLabels, fruitLabels, dairyLabels, proteinLabels } from './foodLabels_Values';\nexport default class FormStep2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: \"\",\n      quantity: 0,\n      label: grainLabels[\"bagel\"]\n    };\n\n    this.changeType = e => {\n      this.setState({\n        type: e.target.value\n      }); // now set label\n      // if grain\n\n      if (grainLabels[e.target.value]) {\n        this.setState({\n          label: grainLabels[e.target.value]\n        });\n      } // if veg\n      else if (vegLabels[e.target.value]) {\n          this.setState({\n            label: vegLabels[e.target.value]\n          });\n        } // if fruit\n        else if (fruitLabels[e.target.value]) {\n            this.setState({\n              label: fruitLabels[e.target.value]\n            });\n          } // if dairy\n          else if (dairyLabels[e.target.value]) {\n              this.setState({\n                label: dairyLabels[e.target.value]\n              });\n            } // if protein\n            else if (proteinLabels[e.target.value]) {\n                this.setState({\n                  label: proteinLabels[e.target.value]\n                });\n              }\n    };\n\n    this.changeQuantity = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({\n        type: \"\",\n        quantity: 0\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Please enter your grains...\"), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.state.type,\n      onChange: e => this.changeType(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bagel_large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Bagel (1 large bagel)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bagel_mini\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Bagel (1 mini bagel)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"biscuit_large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Biscuit (1 large biscuit)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"biscuit_small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Biscuit (1 small biscuit)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bread_loaf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Bread (1 loaf)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bread_slice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Bread (1 regular slice)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"rye_loaf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Bread (2 regular slices)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"rye_slice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Rye (1 regular slice)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bulgur\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Bulgar (1 cup)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"cornbread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Cornbread (1 medium sized piece)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"cracker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Cracker (7 crackers)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"english muffin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"English Muffin (1 english muffin)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"muffin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Muffin (1 large muffin)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oatmeal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Oatmeal (1 packet or 1 ounce dry/quick)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pancakes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Pancakes (3 pancakes)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"popcorn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Popcorn (6 cups popped or 100 calorie bag)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ready_breakfast_cereal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Ready-to-eat Breakfast Cereal (1 cup flakes)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"rice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Rice (1 cup)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pasta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Pasta (1 cup)\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"tortillas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Tortillas (1 large tortilla)\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.state.label), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"quantity\",\n      placeholder: \"Quantity\",\n      value: this.state.quantity,\n      onChange: e => this.changeQuantity(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Add Item\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/nicolascarchio/Desktop/when_will_i_run_out/src/classes/FormStep2.js"],"names":["React","grainLabels","vegLabels","fruitLabels","dairyLabels","proteinLabels","FormStep2","Component","state","type","quantity","label","changeType","e","setState","target","value","changeQuantity","name","onSubmit","preventDefault","props","render"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport { grainLabels, vegLabels, fruitLabels, dairyLabels, proteinLabels } from './foodLabels_Values'\n\nexport default class FormStep2 extends React.Component {\n    state = {\n        type: \"\", \n        quantity: 0, \n        label: grainLabels[\"bagel\"]\n    } \n\n    // assign correct type and label on a change of option value\n    changeType = (e) => {\n        this.setState({\n            type: e.target.value, \n        }); \n        // now set label\n        // if grain\n        if (grainLabels[e.target.value]) {\n            this.setState({\n                label: grainLabels[e.target.value]\n            }); \n        } // if veg\n        else if (vegLabels[e.target.value]) {\n            this.setState({\n                label: vegLabels[e.target.value]\n            });\n        }// if fruit\n        else if (fruitLabels[e.target.value]) {\n            this.setState({\n                label: fruitLabels[e.target.value]\n            });\n\n        }// if dairy\n        else if (dairyLabels[e.target.value]) {\n            this.setState({\n                label: dairyLabels[e.target.value]\n            });\n\n        }// if protein\n        else if (proteinLabels[e.target.value]) {\n            this.setState({\n                label: proteinLabels[e.target.value]\n            });\n\n        }\n    }; \n\n    // change the quantity of the current item\n    changeQuantity = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        }); \n    };\n\n    // submit the quantities\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);  \n        this.setState({\n            type: \"\", \n            quantity: 0, \n        }); \n    }\n\n    render() {\n        return (\n            <form>\n                <p>Please enter your grains...</p>               \n                <select defaultValue={this.state.type} onChange={e => this.changeType(e)} >\n                    <option value=\"bagel_large\">Bagel (1 large bagel)</option>\n                    <option value=\"bagel_mini\">Bagel (1 mini bagel)</option>\n                    <option value=\"biscuit_large\">Biscuit (1 large biscuit)</option>\n                    <option value=\"biscuit_small\">Biscuit (1 small biscuit)</option>\n                    <option value=\"bread_loaf\">Bread (1 loaf)</option>\n                    <option value=\"bread_slice\">Bread (1 regular slice)</option>\n                    <option value=\"rye_loaf\">Bread (2 regular slices)</option>\n\n                    <option value=\"rye_slice\">Rye (1 regular slice)</option>\n\n                    <option value=\"bulgur\">Bulgar (1 cup)</option>\n                    <option value=\"cornbread\">Cornbread (1 medium sized piece)</option>\n                    <option value=\"cracker\">Cracker (7 crackers)</option>\n                    <option value=\"english muffin\">English Muffin (1 english muffin)</option>\n                    <option value=\"muffin\">Muffin (1 large muffin)</option>\n                    <option value=\"oatmeal\">Oatmeal (1 packet or 1 ounce dry/quick)</option>\n                    <option value=\"pancakes\">Pancakes (3 pancakes)</option>\n                    <option value=\"popcorn\">Popcorn (6 cups popped or 100 calorie bag)</option>\n                    <option value=\"ready_breakfast_cereal\">Ready-to-eat Breakfast Cereal (1 cup flakes)</option>\n                    <option value=\"rice\">Rice (1 cup)</option>\n                    <option value=\"pasta\">Pasta (1 cup)</option>\n                    <option value=\"tortillas\">Tortillas (1 large tortilla)</option>\n                </select>\n                <p>{this.state.label}</p> \n                <input name=\"quantity\" \n                    placeholder=\"Quantity\" \n                    value={this.state.quantity} \n                    onChange={e => this.changeQuantity(e)}                \n                />\n                <br />\n                <button onClick={e => this.onSubmit(e)}>Add Item</button>\n            </form>\n        ); \n    }\n}"]},"metadata":{},"sourceType":"module"}