{"ast":null,"code":"var _jsxFileName = \"/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/Step2.js\";\nimport React, { Component } from \"react\";\nimport FormStep2 from '../classes/FormStep2';\nimport history from '../classes/history';\nimport { grainQuantities, vegQuantities, fruitQuantities, dairyQuantities, proteinQuantities } from '../classes/foodLabels_Values';\n\nfunction howLongWillItLast(grains, veg, fruit, dairy, protein, grainsCount, vegCount, fruitCount, dairyCount, proteinCount) {\n  return [{\n    daysOfGrains: +(grainsCount / grains),\n    daysOfVeg: +(vegCount / veg),\n    daysOfFruit: +(fruitCount / fruit),\n    daysOfDairy: +(dairyCount / dairy),\n    daysOfProtein: +(proteinCount, protein)\n  }];\n}\n\nexport default class Step2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      foodList: [],\n      grainsCount: 0,\n      vegCount: 0,\n      fruitCount: 0,\n      dairyCount: 0,\n      proteinCount: 0\n    };\n\n    this.onSubmit = foodList => {\n      var entry = foodList;\n      var newFields = this.state.foodList;\n      newFields.push(entry);\n      console.log(foodList.type + \" quant: \", foodList.quantity);\n      this.setState({\n        grainsList: newFields\n      }); // now set label\n      // if grain\n\n      var temp = 0;\n\n      if (grainQuantities[foodList.type]) {\n        console.log(\"made it\");\n        temp = temp + foodList.quantity * grainQuantities[foodList.type];\n        this.setState({\n          grainsCount: temp\n        });\n      } // if veg\n      else if (vegQuantities[foodList.type]) {\n          temp = this.state.vegCount;\n          this.setState({\n            vegCount: temp + foodList.quantity * +vegQuantities[foodList.type]\n          });\n        } // if fruit\n        else if (fruitQuantities[foodList.type]) {\n            temp = this.state.fruitCount;\n            this.setState({\n              fruitCount: temp + +foodList.quantity * +fruitQuantities[foodList.type]\n            });\n          } // if dairy\n          else if (dairyQuantities[foodList.type]) {\n              temp = this.state.dairyCount;\n              this.setState({\n                dairyCount: temp + +foodList.quantity * +dairyQuantities[foodList.type]\n              });\n            } // if protein\n            else if (proteinQuantities[foodList.type]) {\n                temp = this.state.proteinCount;\n                this.setState({\n                  proteinCount: temp + +foodList.quantity * +proteinQuantities[foodList.type]\n                });\n              }\n\n      console.log(\"grain count: \" + foodList.grainsCount);\n    };\n\n    this.continueToStep3 = e => {\n      const {\n        famData\n      } = this.props.location;\n      console.log('Family data: ' + famData);\n      var willItLast = howLongWillItLast(famData[0].grains, famData[0].veg, famData[0].fruit, famData[0].dairy, famData[0].protein, this.state.grainsCount, this.state.vegCount, this.state.fruitCount, this.state.dairyCount, this.state.proteinCount); // go to next page\n\n      history.push({\n        pathname: '/Step3',\n        willItLast: willItLast\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Step2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormStep2, {\n      onSubmit: foodList => this.onSubmit(foodList),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.foodList, null, 2)), \" ---> (grains list) table here\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.foodList, null, 2)), \" ---> (grains count) count here\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.continueToStep3(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Calculate When I Will Run Out of Food!\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/Step2.js"],"names":["React","Component","FormStep2","history","grainQuantities","vegQuantities","fruitQuantities","dairyQuantities","proteinQuantities","howLongWillItLast","grains","veg","fruit","dairy","protein","grainsCount","vegCount","fruitCount","dairyCount","proteinCount","daysOfGrains","daysOfVeg","daysOfFruit","daysOfDairy","daysOfProtein","Step2","state","foodList","onSubmit","entry","newFields","push","console","log","type","quantity","setState","grainsList","temp","continueToStep3","e","famData","props","location","willItLast","pathname","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FormStep2 from '../classes/FormStep2'; \nimport history from '../classes/history'; \nimport { grainQuantities, vegQuantities, fruitQuantities, dairyQuantities, proteinQuantities } from '../classes/foodLabels_Values'\n\n\nfunction howLongWillItLast(grains, veg, fruit, dairy, protein, grainsCount, vegCount, fruitCount, dairyCount, proteinCount) {\n    return [{\n        daysOfGrains: +(grainsCount / grains), \n        daysOfVeg: +(vegCount / veg), \n        daysOfFruit: +(fruitCount / fruit), \n        daysOfDairy: +(dairyCount / dairy), \n        daysOfProtein: +(proteinCount, protein)\n    }]; \n}\n\nexport default class Step2 extends React.Component {\n    state = {\n        foodList: [], \n        grainsCount: 0, \n        vegCount: 0, \n        fruitCount: 0, \n        dairyCount: 0, \n        proteinCount: 0\n    }\n\n    onSubmit = (foodList) => {\n        var entry = foodList\n        var newFields = this.state.foodList; \n        newFields.push(entry); \n        console.log(foodList.type + \" quant: \", foodList.quantity); \n        this.setState({ \n            grainsList: newFields, \n         })\n         // now set label\n        // if grain\n        var temp = 0; \n        if (grainQuantities[foodList.type]) {\n            console.log(\"made it\"); \n            temp = temp + foodList.quantity * grainQuantities[foodList.type]; \n            this.setState({\n                grainsCount: temp\n            }); \n        } // if veg\n        else if (vegQuantities[foodList.type]) {\n            temp = this.state.vegCount; \n            this.setState({\n                vegCount: temp + foodList.quantity * (+vegQuantities[foodList.type])\n            });\n        }// if fruit\n        else if (fruitQuantities[foodList.type]) {\n            temp = this.state.fruitCount; \n            this.setState({\n                fruitCount: temp + (+foodList.quantity) * (+fruitQuantities[foodList.type])\n            });\n\n        }// if dairy\n        else if (dairyQuantities[foodList.type]) {\n            temp = this.state.dairyCount; \n            this.setState({\n                dairyCount: temp + (+foodList.quantity) * (+dairyQuantities[foodList.type])\n            });\n\n        }// if protein\n        else if (proteinQuantities[foodList.type]) {\n            temp = this.state.proteinCount; \n            this.setState({\n                proteinCount: temp + (+foodList.quantity) * (+proteinQuantities[foodList.type])\n            });\n\n        }\n        console.log(\"grain count: \" + foodList.grainsCount); \n    }; \n\n    /**\n   * Transitions to step 3\n   */\n  continueToStep3 = (e) => {\n    const {famData} = this.props.location; \n    console.log('Family data: ' + famData);\n    var willItLast = howLongWillItLast(famData[0].grains, famData[0].veg, famData[0].fruit, famData[0].dairy, famData[0].protein, this.state.grainsCount, this.state.vegCount, this.state.fruitCount, this.state.dairyCount, this.state.proteinCount); \n    // go to next page\n    history.push({\n        pathname: ('/Step3'), \n        willItLast: willItLast\n      });   \n  }; \n    \n    render() {\n        return (\n            <div className=\"Step2\">\n                <FormStep2 onSubmit={foodList => this.onSubmit(foodList)}/>\n                <p>{JSON.stringify(this.state.foodList, null, 2)}</p> ---> (grains list) table here\n                <p>{JSON.stringify(this.state.foodList, null, 2)}</p> ---> (grains count) count here\n                {/* <p>{JSON.stringify(this.props.state.familyMembers[0], null, 5)}</p> ---> table here */}\n                <button onClick={e => this.continueToStep3(e)}>Calculate When I Will Run Out of Food!</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}