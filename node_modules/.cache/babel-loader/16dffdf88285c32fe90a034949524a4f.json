{"ast":null,"code":"var _jsxFileName = \"/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/Step2.js\";\nimport React, { Component } from \"react\";\nimport FormStep2 from '../classes/FormStep2';\nimport history from '../classes/history';\n\nfunction howLongWillItLast(grains, veg, fruit, dairy, protein, grainsCount, vegCount, fruitCount, dairyCount, proteinCount) {\n  // now calculate how long the food will last\n  var test = [{\n    grains: grains\n  }, {\n    grainCount: grainsCount\n  }];\n  console.table(test);\n  return [{\n    daysOfGrains: +(grainsCount / grains),\n    daysOfVeg: +(vegCount / veg),\n    daysOfFruit: +(fruitCount / fruit),\n    daysOfDairy: +(dairyCount / dairy),\n    daysOfProtein: +(proteinCount, protein)\n  }];\n}\n\nexport default class Step2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      grainsList: [],\n      grainsCount: 0\n    };\n\n    this.onSubmit = grainsList => {\n      var entry = grainsList;\n      var newFields = this.state.grainsList;\n      newFields.push(entry);\n      console.log(\"quant: \", grainsList.quantity);\n      this.setState({\n        grainsList: newFields,\n        grainsCount: +this.state.grainsCount + +grainsList.quantity\n      });\n      console.log(\"this.state.grainsCount\", +this.state.grainsCount);\n    };\n\n    this.continueToStep3 = e => {\n      const {\n        famData\n      } = this.props.location;\n      console.log('Family data: ' + famData); // this.setState ({\n      //     grainCount: countGrains(this.state.grainsList)\n      // }); \n      // console.log(\"this.state.grainsCount\", this.state.grainsCount); \n\n      var willItLast = howLongWillItLast(famData.grains, 0, 0, 0, 0, this.state.grainsCount, 0, 0, 0, 0); // go to next page\n\n      history.push({\n        pathname: '/Step3',\n        willItLast: willItLast\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Step2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormStep2, {\n      onSubmit: grainsList => this.onSubmit(grainsList),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.grainsList, null, 2)), \" ---> (grains list) table here\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, JSON.stringify(this.state.grainsCount, null, 2)), \" ---> (grains count) count here\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.continueToStep3(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Calculate When I Will Run Out of Food!\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/nicolascarchio/Desktop/when_will_i_run_out/src/app/Step2.js"],"names":["React","Component","FormStep2","history","howLongWillItLast","grains","veg","fruit","dairy","protein","grainsCount","vegCount","fruitCount","dairyCount","proteinCount","test","grainCount","console","table","daysOfGrains","daysOfVeg","daysOfFruit","daysOfDairy","daysOfProtein","Step2","state","grainsList","onSubmit","entry","newFields","push","log","quantity","setState","continueToStep3","e","famData","props","location","willItLast","pathname","render","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FormStep2 from '../classes/FormStep2'; \nimport history from '../classes/history'; \n\nfunction howLongWillItLast(grains, veg, fruit, dairy, protein, grainsCount, vegCount, fruitCount, dairyCount, proteinCount) {\n    // now calculate how long the food will last\n    var test = [\n        {grains: grains}, \n        {grainCount: grainsCount}\n    ]\n    console.table(test); \n    return [{\n        daysOfGrains: +(grainsCount / grains), \n        daysOfVeg: +(vegCount / veg), \n        daysOfFruit: +(fruitCount / fruit), \n        daysOfDairy: +(dairyCount / dairy), \n        daysOfProtein: +(proteinCount, protein)\n    }]; \n}\n\nexport default class Step2 extends React.Component {\n\n    state = {\n        grainsList: [], \n        grainsCount: 0\n    }\n\n    onSubmit = (grainsList) => {\n        var entry = grainsList\n        var newFields = this.state.grainsList; \n        newFields.push(entry); \n        console.log(\"quant: \", grainsList.quantity); \n        this.setState({ \n            grainsList: newFields, \n            grainsCount: (+this.state.grainsCount) + (+grainsList.quantity)\n         })\n        console.log(\"this.state.grainsCount\", +this.state.grainsCount); \n\n    }; \n\n    /**\n   * Transitions to step 3\n   */\n  continueToStep3 = (e) => {\n    const {famData} = this.props.location; \n    console.log('Family data: ' + famData);\n    // this.setState ({\n    //     grainCount: countGrains(this.state.grainsList)\n    // }); \n    // console.log(\"this.state.grainsCount\", this.state.grainsCount); \n    var willItLast = howLongWillItLast(famData.grains, 0, 0, 0, 0, this.state.grainsCount, 0, 0, 0, 0); \n    // go to next page\n    history.push({\n        pathname: ('/Step3'), \n        willItLast: willItLast\n      });   \n  }; \n    \n    render() {\n        return (\n            <div className=\"Step2\">\n                <FormStep2 onSubmit={grainsList => this.onSubmit(grainsList)}/>\n                <p>{JSON.stringify(this.state.grainsList, null, 2)}</p> ---> (grains list) table here\n                <p>{JSON.stringify(this.state.grainsCount, null, 2)}</p> ---> (grains count) count here\n                {/* <p>{JSON.stringify(this.props.state.familyMembers[0], null, 5)}</p> ---> table here */}\n                <button onClick={e => this.continueToStep3(e)}>Calculate When I Will Run Out of Food!</button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}